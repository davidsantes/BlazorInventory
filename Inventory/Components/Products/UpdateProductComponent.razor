@using Entities
@using Business.Interfaces

@inject NavigationManager NavManager
@inject ICrudDataService<ProductEntity> productService
@inject ICrudDataService<CategoryEntity> categoryService

<h3>Producto - actualizar</h3>
<hr />

<EditForm Model=@updateProduct>
    <div class="form-group">
        <label>Nombre del producto:</label>
        <InputText @bind-Value="updateProduct.ProductName" class="form-control" />
    </div>
    <div class="form-group">
        <label>Descripción:</label>
        <InputTextArea @bind-Value="updateProduct.ProductDescription" class="form-control" />
    </div>
    <div class="form-group">
        <label>Categoría:</label>
        <InputSelect @bind-Value="updateProduct.CategoryId" class="form-control">
            <option value="">Seleccione una categoría...</option>
            @foreach (var category in categories)
            {
                <option value="@category.CategoryId">@category.CategoryName</option>
            }
        </InputSelect>
    </div>
    <hr />
    <input type="button" class="btn btn-primary" value="Actualizar producto" @onclick=@Save />
</EditForm>

@code {
    [Parameter]
    public string IdProduct { get; set; }

    ProductEntity updateProduct = new ProductEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = categoryService.ItemList();
        updateProduct = productService.ItemById(IdProduct);
    }

    private void Save()
    {
        productService.UpdateItem(updateProduct);
        NavManager.NavigateTo("product/list");
    }
}